name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true

      - name: Configure Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.6'

      - name: Get Version e Commit Hash
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          COMMIT=$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV

      - name: Compile Application
        run: |
          APPNAME="ouimap"
          OUTPUT="$APPNAME-${{ matrix.os }}-${{ matrix.arch }}"
          [[ "${{ matrix.os }}" == "windows" ]] && OUTPUT="$OUTPUT.exe"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "-X main.appVersion=${{ env.VERSION }} -X main.appBuild=${{ env.COMMIT }}" -o $OUTPUT .

      - name: Create Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: $APPNAME-${{ matrix.os }}-${{ matrix.arch }}
          path: $APPNAME-${{ matrix.os }}-${{ matrix.arch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/*
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: "Version ${{ env.VERSION }} generated automatically."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
